
const RGB_H__n=(_,a,o)=>{const t=Math.min(_,a,o),s=Math.max(_,a,o);if(s===t)return 0;const T=s-t;return~~(60*(s===_?(a-o)/T+(a<o?6:0):s===a?(o-_)/T+2:(_-a)/T+4))},RGB_S__n=(_,a,o)=>{const t=Math.min(_,a,o),s=Math.max(_,a,o),T=s-t;if(!T)return 0;const n=t+s;return n>255?T/(510-s-t):T/n},RGB_L__n=(_,a,o)=>(Math.min(_,a,o)+Math.max(_,a,o))/510,STAT_W_o={port_o:null,pixel_n:1,status_o:{scan_b:!1},message_o:["GET_scan","GET_status","GET_frequency","GET_img","PUT_canvas","PUT_draw","PUT_hsl","PUT_scale"],scan_a:null,SCAN_HUE_n:0,SCAN_HUE_FREQ_n:1,SCAN_HUE_RANK_n:2,SCAN_SAT_n:3,SCAN_SAT_FREQ_n:4,SCAN_SAT_RANK_n:5,SCAN_LUM_n:6,SCAN_LUM_FREQ_n:7,SCAN_LUM_RANK_n:8,stat_o:{},script_o:new Set,imgBitmap_a:new Map,script__v(_){if(_){let a=[];for(let o of _.split(" "))STAT_W_o.script_o.has(o)||(STAT_W_o.script_o.add(o),a.push(`${o}.min.js`));a.length&&self.importScripts(...a)}},sleep__v:_=>new Promise((a=>setTimeout(a,_))),async waitScan__v(_){let a=100;for(;!STAT_W_o.status_o.scan_b;){if(!(--a>0))return STAT_W_o.post__v({task_s:"PUT_error",stat_s:_,error_s:"scan is not available"}),!1;await STAT_W_o.sleep__v(50)}return!0},scale__n(_,a,o){const t=.5*STAT_W_o.stat_o[`${_}_o`][`${a}_o`].canvas_o.width*(1-o);STAT_W_o.stat_o[`${_}_o`][`${a}_o`].context_o.setTransform(o,0,0,o,t,t)},async bitmap__o(_){try{let{rect_s:a,scale_n:o,url_s:t,storeBitmap_b:s}=_;if(STAT_W_o.imgBitmap_a.has(t))return STAT_W_o.imgBitmap_a.get(t);let[T,n,e,A]=a.split(" ");const c=await fetch(t),S=await c.blob(),r=await createImageBitmap(S,T-e/o*.5,n-A/o*.5,e/o,A/o,{resizeWidth:e,resizeHeight:A,resizeQuality:"high"});return s&&STAT_W_o.imgBitmap_a.set(t,r),r}catch(_){return console.log(`ERROR DETECTED @bitmap__o(): ${_}`),null}},get_status__v(){STAT_W_o.post__v({task_s:"PUT_status",status_o:STAT_W_o.status_o},[STAT_W_o.status_o])},async get_scan__v(_){if(!STAT_W_o.scan_a){console.time("scan");
//!!!!!!!!!!!!!!!!!!!!!!!!!!
const a=`/assets/media/img/${_.work_s}/full/max/0/color.jpeg`,o=await fetch(a),t=await o.blob(),s=await createImageBitmap(t),T=new OffscreenCanvas(s.width,s.height).getContext("2d");T.drawImage(s,0,0);const n=T.getImageData(0,0,s.width,s.height);STAT_W_o.capacity_n=s.width*s.height,STAT_W_o.scan_a=new Array(1+STAT_W_o.SCAN_LUM_RANK_n);let e,A,c,S=360;for(STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_n]=new Array(S),STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_FREQ_n]=new Array(S);--S>=0;)STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_n][S]=[],STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_FREQ_n][S]=0;for(S=101,STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_n]=new Array(S),STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_FREQ_n]=new Array(S);--S>=0;)STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_n][S]=[],STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_FREQ_n][S]=0;for(S=101,STAT_W_o.scan_a[STAT_W_o.SCAN_LUM_n]=new Array(S),STAT_W_o.scan_a[STAT_W_o.SCAN_LUM_FREQ_n]=new Array(S);--S>=0;)STAT_W_o.scan_a[STAT_W_o.SCAN_LUM_n][S]=[],STAT_W_o.scan_a[STAT_W_o.SCAN_LUM_FREQ_n][S]=0;for(let _=0;_<n.data.length;_+=4){e=n.data[_],A=n.data[_+1],c=n.data[_+2];let a=RGB_H__n(e,A,c);STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_n][a].push(_),STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_FREQ_n][a]+=1;let o=~~(100*RGB_S__n(e,A,c));STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_n][o].push(_),STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_FREQ_n][o]+=1;let t=~~(100*RGB_L__n(e,A,c));STAT_W_o.scan_a[STAT_W_o.SCAN_LUM_n][t].push(_),STAT_W_o.scan_a[STAT_W_o.SCAN_LUM_FREQ_n][t]+=1}const r=_=>{const a=_.length;let o=new Array(a);for(let t=0;t<a;++t)o[t]=[_[t],t];return o.sort(((_,a)=>a[0]-_[0])),o};STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_RANK_n]=r(STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_FREQ_n]),STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_RANK_n]=r(STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_FREQ_n]),STAT_W_o.scan_a[STAT_W_o.SCAN_LUM_RANK_n]=r(STAT_W_o.scan_a[STAT_W_o.SCAN_LUM_FREQ_n]),console.timeEnd("scan")}},get_frequency__v(_){const{part_s:a,frequency_n:o}=_,t=a.toUpperCase();let s=STAT_W_o[`SCAN_${t}_FREQ_n`];STAT_W_o.post__v({task_s:"PUT_frequency",part_s:a,frequency_n:STAT_W_o.scan_a[s][o],capacity_n:STAT_W_o.capacity_n})},async get_img__v(_){try{const a=await STAT_W_o.bitmap__o(_);a&&await _.canvas_e.getContext("2d").drawImage(a,0,0)}catch(_){console.log(`ERROR DETECTED @get_img__v(): ${_}`)}},put_canvas__v(_){STAT_W_o.pixel_n=_.pixel_n;const{stat_s:a,part_s:o}=_;STAT_W_o.stat_o[`${a}_o`]||(STAT_W_o.stat_o[`${a}_o`]={}),STAT_W_o.stat_o[`${a}_o`][`${o}_o`]={},STAT_W_o.stat_o[`${a}_o`][`${o}_o`].canvas_o=_.canvas_e;const t=_.canvas_e.getContext("2d");STAT_W_o.pixel_n=_.pixel_n,STAT_W_o.stat_o[`${a}_o`][`${o}_o`].context_o=t,STAT_W_o.stat_o[`${a}_o`][`${o}_o`].painter_c=new Painter(t)},put_draw__v(_){const{stat_s:a,part_s:o}=_;switch(a){case"burst":if(0===STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_FREQ_n][_.hue_n])return STAT_W_o.stat_o[`${a}_o`].sat_o.burst_c.clear__v(),void STAT_W_o.stat_o[`${a}_o`].lum_o.burst_c.clear__v();let t;switch(o){case"hue":t=360;break;case"sat":case"lum":t=101}const s=o.toUpperCase(),T=`SCAN_${s}_FREQ_n`,n=`SCAN_${s}_RANK_n`,e=[];let A=0;for(let a of STAT_W_o.scan_a[STAT_W_o[T]]){let t,s,T;switch(o){case"hue":t=A,s=100,T=50;break;case"sat":t=_.hue_n,s=A,T=50;break;case"lum":t=_.hue_n,s=0,T=A}e[A]=a?{frequency_n:a,hsl_a:[t,s,T]}:null,++A}const c={color_a:e,range_n:t,canvas_o:STAT_W_o.stat_o[`${a}_o`][`${o}_o`].canvas_o,median_n:.5*STAT_W_o.stat_o[`${a}_o`][`${o}_o`].canvas_o.width,maxfreq_n:STAT_W_o.scan_a[STAT_W_o[n]][0][0]};STAT_W_o.stat_o[`${a}_o`][`${o}_o`].burst_c=new ColorBurst(c);break;case"aster":default:break;case"paint":const S=STAT_W_o.stat_o[`${a}_o`][`${o}_o`].painter_c,[r,W]=o.split("_");switch(r){case"hue":for(let _=0;_<360;++_)S.fill__c([_,100,50]).rect__c(0,2*_,100,2,"fill");break;case"sat":for(let a=0;a<101;++a)S.fill__c([_.hue_n,a,50]).rect__c(0,2*a,100,2,"fill");break;case"lum":for(let _=0;_<101;++_)S.fill__c([0,0,_]).rect__c(0,2*_,100,2,"fill")}}},put_hsl__v(_){const{stat_s:a,hsl_s:o,grade_n:t,atX_n:s,gap_n:T,atY_n:n}=_;let e=~~(s/t),A=~~(n/T);STAT_W_o.stat_o[`${a}_o`][`${o}_front_o`].painter_c.rect__c(0,A*T*2,100,2*T,"clear").fill__c([0,0,100,1-e*t/100]).rect__c(e*t,A*T*2,100-e*t,2*T,"fill")},put_scale__v(_){const{stat_s:a,part_s:o,scale_n:t}=_;STAT_W_o.stat_o[`${a}_o`][`${o}_o`].burst_c.clear__v(),//!!! before scaling
STAT_W_o.scale__n(a,o,t),STAT_W_o.stat_o[`${a}_o`][`${o}_o`].burst_c.draw__v()},message__v(_){const a=_.data;STAT_W_o.script__v(a.script_s);const o=a.task_s;if(STAT_W_o.message_o.includes(o)){const _=o.toLowerCase()+"__v";STAT_W_o[_](a)}},post__v(_){STAT_W_o.port_o.postMessage(_)},handleError__v(_){console.log`ERROR: ${_.message}`}};onconnect=_=>{STAT_W_o.port_o=_.ports[0],STAT_W_o.port_o.onmessage=STAT_W_o.message__v,STAT_W_o.port_o.onmessageerror=STAT_W_o.handleError__v};