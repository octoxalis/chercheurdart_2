
const RGB_H__n=(_,o,a)=>{const T=Math.min(_,o,a),s=Math.max(_,o,a);if(s===T)return 0;const t=s-T;return~~(60*(s===_?(o-a)/t+(o<a?6:0):s===o?(a-_)/t+2:(_-o)/t+4))},RGB_S__n=(_,o,a)=>{const T=Math.min(_,o,a),s=Math.max(_,o,a),t=s-T;if(!t)return 0;const n=T+s;return n>255?t/(510-s-T):t/n},RGB_L__n=(_,o,a)=>(Math.min(_,o,a)+Math.max(_,o,a))/510,STAT_W_o={port_o:null,pixel_n:1,status_o:{scan_b:!1},message_o:["GET_scan","GET_status","GET_frequency","PUT_canvas","PUT_draw","PUT_scale"],scan_a:null,SCAN_HUE_n:0,SCAN_HUE_FREQ_n:1,SCAN_HUE_RANK_n:2,SCAN_SAT_n:3,SCAN_SAT_FREQ_n:4,SCAN_SAT_RANK_n:5,SCAN_LUM_n:6,SCAN_LUM_FREQ_n:7,SCAN_LUM_RANK_n:8,stat_o:{},script_o:new Set,script__v(_){if(_){let o=[];for(let a of _.split(" "))STAT_W_o.script_o.has(a)||(STAT_W_o.script_o.add(a),o.push(`${a}.min.js`));o.length&&self.importScripts(...o)}},sleep__v:_=>new Promise((o=>setTimeout(o,_))),async waitScan__v(_){let o=100;for(;!STAT_W_o.status_o.scan_b;){if(!(--o>0))return STAT_W_o.post__v({task_s:"PUT_error",stat_s:_,error_s:"scan is not available"}),!1;await STAT_W_o.sleep__v(50)}return!0},scale__n(_,o,a){const T=.5*STAT_W_o.stat_o[`${_}_o`][`${o}_o`].canvas_o.width*(1-a);STAT_W_o.stat_o[`${_}_o`][`${o}_o`].context_o.setTransform(a,0,0,a,T,T)},get_status__v(){STAT_W_o.post__v({task_s:"PUT_status",status_o:STAT_W_o.status_o},[STAT_W_o.status_o])},async get_scan__v(_){if(!STAT_W_o.scan_a){console.time("scan");
//!!!!!!!!!!!!!!!!!!!!!!!!!!
const o=`/assets/media/img/${_.work_s}/full/max/0/color.jpeg`,a=await fetch(o),T=await a.blob(),s=await createImageBitmap(T),t=new OffscreenCanvas(s.width,s.height).getContext("2d");t.drawImage(s,0,0);const n=t.getImageData(0,0,s.width,s.height);STAT_W_o.capacity_n=s.width*s.height,STAT_W_o.scan_a=new Array(1+STAT_W_o.SCAN_LUM_RANK_n);let A,S,e,c=360;for(STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_n]=new Array(c),STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_FREQ_n]=new Array(c);--c>=0;)STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_n][c]=[],STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_FREQ_n][c]=0;for(c=101,STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_n]=new Array(c),STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_FREQ_n]=new Array(c);--c>=0;)STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_n][c]=[],STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_FREQ_n][c]=0;for(c=101,STAT_W_o.scan_a[STAT_W_o.SCAN_LUM_n]=new Array(c),STAT_W_o.scan_a[STAT_W_o.SCAN_LUM_FREQ_n]=new Array(c);--c>=0;)STAT_W_o.scan_a[STAT_W_o.SCAN_LUM_n][c]=[],STAT_W_o.scan_a[STAT_W_o.SCAN_LUM_FREQ_n][c]=0;for(let _=0;_<n.data.length;_+=4){A=n.data[_],S=n.data[_+1],e=n.data[_+2];let o=RGB_H__n(A,S,e);STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_n][o].push(_),STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_FREQ_n][o]+=1;let a=~~(100*RGB_S__n(A,S,e));STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_n][a].push(_),STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_FREQ_n][a]+=1;let T=~~(100*RGB_L__n(A,S,e));STAT_W_o.scan_a[STAT_W_o.SCAN_LUM_n][T].push(_),STAT_W_o.scan_a[STAT_W_o.SCAN_LUM_FREQ_n][T]+=1}const r=_=>{const o=_.length;let a=new Array(o);for(let T=0;T<o;++T)a[T]=[_[T],T];return a.sort(((_,o)=>o[0]-_[0])),a};STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_RANK_n]=r(STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_FREQ_n]),STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_RANK_n]=r(STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_FREQ_n]),STAT_W_o.scan_a[STAT_W_o.SCAN_LUM_RANK_n]=r(STAT_W_o.scan_a[STAT_W_o.SCAN_LUM_FREQ_n]),console.timeEnd("scan")}},get_frequency__v(_){const{part_s:o,frequency_n:a}=_,T=o.toUpperCase();let s=STAT_W_o[`SCAN_${T}_FREQ_n`];STAT_W_o.post__v({task_s:"PUT_frequency",part_s:o,frequency_n:STAT_W_o.scan_a[s][a],capacity_n:STAT_W_o.capacity_n})},put_canvas__v(_){const{stat_s:o,part_s:a}=_;STAT_W_o.stat_o[`${o}_o`]||(STAT_W_o.stat_o[`${o}_o`]={}),STAT_W_o.stat_o[`${o}_o`][`${a}_o`]={},STAT_W_o.stat_o[`${o}_o`][`${a}_o`].canvas_o=_.canvas_e;const T=_.canvas_e.getContext("2d");STAT_W_o.pixel_n=_.pixel_n,STAT_W_o.stat_o[`${o}_o`][`${a}_o`].context_o=T},put_draw__v(_){const{stat_s:o,part_s:a}=_;if(0===STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_FREQ_n][_.hue_n])return STAT_W_o.stat_o[`${o}_o`].sat_o.burst_c.clear__v(),void STAT_W_o.stat_o[`${o}_o`].lum_o.burst_c.clear__v();let T;switch(a){case"hue":T=360;break;case"sat":case"lum":T=101}const s=a.toUpperCase(),t=`SCAN_${s}_FREQ_n`,n=`SCAN_${s}_RANK_n`,A=[];let S=0;for(let o of STAT_W_o.scan_a[STAT_W_o[t]]){let T,s,t;switch(a){case"hue":T=S,s=100,t=50;break;case"sat":T=_.hue_n,s=S,t=50;break;case"lum":T=_.hue_n,s=0,t=S}A[S]=o?{frequency_n:o,hsl_a:[T,s,t]}:null,++S}const e={color_a:A,range_n:T,canvas_o:STAT_W_o.stat_o[`${o}_o`][`${a}_o`].canvas_o,median_n:.5*STAT_W_o.stat_o[`${o}_o`][`${a}_o`].canvas_o.width,maxfreq_n:STAT_W_o.scan_a[STAT_W_o[n]][0][0]};STAT_W_o.stat_o[`${o}_o`][`${a}_o`].burst_c=new ColorBurst(e)},put_scale__v(_){const{stat_s:o,part_s:a,scale_n:T}=_;STAT_W_o.stat_o[`${o}_o`][`${a}_o`].burst_c.clear__v(),//!!! before scaling
STAT_W_o.scale__n(o,a,T),STAT_W_o.stat_o[`${o}_o`][`${a}_o`].burst_c.draw__v()},message__v(_){const o=_.data;STAT_W_o.script__v(o.script_s);const a=o.task_s;if(STAT_W_o.message_o.includes(a)){const _=a.toLowerCase()+"__v";STAT_W_o[_](o)}},post__v(_){STAT_W_o.port_o.postMessage(_)},handleError__v(_){console.log`ERROR: ${_.message}`}};onconnect=_=>{STAT_W_o.port_o=_.ports[0],STAT_W_o.port_o.onmessage=STAT_W_o.message__v,STAT_W_o.port_o.onmessageerror=STAT_W_o.handleError__v};