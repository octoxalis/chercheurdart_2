
const STAT_W_o={port_o:null,status_o:{scan_b:!1},message_o:["GET_scan","GET_status","PUT_canvas"],scan_a:null,client_o:{},script_o:new Set,sleep__v:_=>new Promise((o=>setTimeout(o,_))),read__v(_,o,s="text"){fetch(_).then((_=>{if(_.ok)return _[s]();throw new Error(`${_.status}: ${_.statusText}`)})).then((_=>{o(_)})).catch((_=>console.error(_)))},async waitScan__v(_){let o=100;for(;!STAT_W_o.status_o.scan_b;){if(!(--o>0))return STAT_W_o.post__v({client_s:_,task_s:"PUT_error",error_s:"scan is not available"}),!1;await STAT_W_o.sleep__v(50)}return!0},deflat__a(_,o){const s=[];let t=0,e=0;for(cap_n of _)s[t]=o.slice(e,e+cap_n),++t,e+=cap_n;return s},get_scan__v(_){STAT_W_o.scan_a||(console.time("scan"),
//!!!!!!!!!!!!!!!!!!!!!!!!!!
STAT_W_o.read__v(`/assets/media/img/${_.work_s}/full/max/0/scan.json`,(_=>{if(STAT_W_o.scan_a=new Function(`return ${_}`)(),console.log(STAT_W_o.scan_a),STAT_W_o.scan_a){STAT_W_o.status_o.scan_b=!0;const _=STAT_W_o.deflat__a(STAT_W_o.scan_a[0],STAT_W_o.scan_a[1]);console.log(_)}
//!!!!!!!!!!!!!!!!!!!!!!!!!!
console.timeEnd("scan");
//!!!!!!!!!!!!!!!!!!!!!!!!!!
})))},get_status__v(){STAT_W_o.post__v({task_s:"PUT_status",status_o:STAT_W_o.status_o},[STAT_W_o.status_o])},put_canvas__v(_){const o=_.client_s;STAT_W_o.client_o[o]||(STAT_W_o.client_o[o]={}),STAT_W_o.client_o[o].canvas_e=_.canvas_e;const s=_.pixel_n,t=_.canvas_e.getContext("2d");t.setTransform(s,0,0,s,0,0),STAT_W_o.client_o[o].context_o=t},script__v(_){if(_){let o=[];for(let s of _.split(" "))STAT_W_o.script_o.has(s)||(STAT_W_o.script_o.add(s),o.push(`${s}.min.js`));o.length&&self.importScripts(...o)}},message__v(_){const o=_.data;STAT_W_o.script__v(o.script_s);const s=o.task_s;if(STAT_W_o.message_o.includes(s)){const _=s.toLowerCase()+"__v";STAT_W_o[_](o)}},post__v(_){STAT_W_o.port_o.postMessage(_)},handleError__v:_=>console.log`ERROR: ${_.message}`};onconnect=_=>{STAT_W_o.port_o=_.ports[0],STAT_W_o.port_o.onmessage=STAT_W_o.message__v,STAT_W_o.port_o.onmessageerror=STAT_W_o.handleError__v};