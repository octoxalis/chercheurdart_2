
const RGB_H__n=(_,a,t)=>{const o=Math.min(_,a,t),s=Math.max(_,a,t);if(s===o)return 0;const e=s-o;return~~(60*(s===_?(a-t)/e+(a<t?6:0):s===a?(t-_)/e+2:(_-a)/e+4))},RGB_S__n=(_,a,t)=>{const o=Math.min(_,a,t),s=Math.max(_,a,t),e=s-o;if(!e)return 0;const n=o+s;return n>255?e/(510-s-o):e/n},RGB_L__n=(_,a,t)=>(Math.min(_,a,t)+Math.max(_,a,t))/510,STAT_W_o={port_o:null,pixel_n:1,status_o:{scan_b:!1},message_o:["GET_scan","GET_status","GET_frequency","GET_img","PUT_canvas","PUT_draw","PUT_hsl","PUT_scale"],scan_a:null,SCAN_hue_n:0,SCAN_hue_freq_n:1,SCAN_hue_rank_n:2,SCAN_sat_n:3,SCAN_sat_freq_n:4,SCAN_sat_rank_n:5,SCAN_lum_n:6,SCAN_lum_freq_n:7,SCAN_lum_rank_n:8,stat_o:{},script_o:new Set,imgBitmap_a:new Map,imgLayer_a:[],script__v(_){if(_){let a=[];for(let t of _.split(" "))STAT_W_o.script_o.has(t)||(STAT_W_o.script_o.add(t),a.push(`${t}.min.js`));a.length&&self.importScripts(...a)}},sleep__v:_=>new Promise((a=>setTimeout(a,_))),async waitScan__v(_){let a=100;for(;!STAT_W_o.status_o.scan_b;){if(!(--a>0))return STAT_W_o.post__v({task_s:"PUT_error",stat_s:_,error_s:"scan is not available"}),!1;await STAT_W_o.sleep__v(50)}return!0},scale__n(_,a,t){const o=.5*STAT_W_o.stat_o[`${_}_o`][`${a}_o`].canvas_o.width*(1-t);STAT_W_o.stat_o[`${_}_o`][`${a}_o`].context_o.setTransform(t,0,0,t,o,o)},async bitmap__o(_){try{let{rect_s:a,scale_n:t,url_s:o,storeBitmap_b:s}=_;if(STAT_W_o.imgBitmap_a.has(o))return STAT_W_o.imgBitmap_a.get(o);let[e,n,T,r]=a.split(" ");const c=await fetch(o),A=await c.blob(),S=await createImageBitmap(A,e-T/t*.5,n-r/t*.5,T/t,r/t,{resizeWidth:T,resizeHeight:r,resizeQuality:"high"});return s&&STAT_W_o.imgBitmap_a.set(o,S),S}catch(_){return console.log(`ERROR DETECTED @bitmap__o(): ${_}`),null}},get_status__v(){STAT_W_o.post__v({task_s:"PUT_status",status_o:STAT_W_o.status_o},[STAT_W_o.status_o])},async get_scan__v(_){if(!STAT_W_o.scan_a){
//!!!!!!!!!!!!!!!!!!!!!!!!!!
//!!!!!!!!!!!!!!!!!!!!!!!!!!
const a=`/assets/media/img/${_.work_s}/full/max/0/color.jpeg`,t=await fetch(a),o=await t.blob(),s=await createImageBitmap(o),e=new OffscreenCanvas(s.width,s.height).getContext("2d");e.drawImage(s,0,0);const n=e.getImageData(0,0,s.width,s.height);STAT_W_o.capacity_n=s.width*s.height,STAT_W_o.scan_a=new Array(1+STAT_W_o.SCAN_lum_rank_n);let T,r,c,A=360;for(STAT_W_o.scan_a[STAT_W_o.SCAN_hue_n]=new Array(A),STAT_W_o.scan_a[STAT_W_o.SCAN_hue_freq_n]=new Array(A);--A>=0;)STAT_W_o.scan_a[STAT_W_o.SCAN_hue_n][A]=[],STAT_W_o.scan_a[STAT_W_o.SCAN_hue_freq_n][A]=0;for(A=101,STAT_W_o.scan_a[STAT_W_o.SCAN_sat_n]=new Array(A),STAT_W_o.scan_a[STAT_W_o.SCAN_sat_freq_n]=new Array(A);--A>=0;)STAT_W_o.scan_a[STAT_W_o.SCAN_sat_n][A]=[],STAT_W_o.scan_a[STAT_W_o.SCAN_sat_freq_n][A]=0;for(A=101,STAT_W_o.scan_a[STAT_W_o.SCAN_lum_n]=new Array(A),STAT_W_o.scan_a[STAT_W_o.SCAN_lum_freq_n]=new Array(A);--A>=0;)STAT_W_o.scan_a[STAT_W_o.SCAN_lum_n][A]=[],STAT_W_o.scan_a[STAT_W_o.SCAN_lum_freq_n][A]=0;for(let _=0;_<n.data.length;_+=4){T=n.data[_],r=n.data[_+1],c=n.data[_+2];let a=RGB_H__n(T,r,c);STAT_W_o.scan_a[STAT_W_o.SCAN_hue_n][a].push(_),STAT_W_o.scan_a[STAT_W_o.SCAN_hue_freq_n][a]+=1;let t=~~(100*RGB_S__n(T,r,c));STAT_W_o.scan_a[STAT_W_o.SCAN_sat_n][t].push(_),STAT_W_o.scan_a[STAT_W_o.SCAN_sat_freq_n][t]+=1;let o=~~(100*RGB_L__n(T,r,c));STAT_W_o.scan_a[STAT_W_o.SCAN_lum_n][o].push(_),STAT_W_o.scan_a[STAT_W_o.SCAN_lum_freq_n][o]+=1}const S=_=>{const a=_.length;let t=new Array(a);for(let o=0;o<a;++o)t[o]=[_[o],o];return t.sort(((_,a)=>a[0]-_[0])),t};STAT_W_o.scan_a[STAT_W_o.SCAN_hue_rank_n]=S(STAT_W_o.scan_a[STAT_W_o.SCAN_hue_freq_n]),STAT_W_o.scan_a[STAT_W_o.SCAN_sat_rank_n]=S(STAT_W_o.scan_a[STAT_W_o.SCAN_sat_freq_n]),STAT_W_o.scan_a[STAT_W_o.SCAN_lum_rank_n]=S(STAT_W_o.scan_a[STAT_W_o.SCAN_lum_freq_n])}},get_frequency__v(_){const{part_s:a,frequency_n:t}=_;let o=STAT_W_o[`SCAN_${a}_freq_n`];STAT_W_o.post__v({task_s:"PUT_frequency",part_s:a,frequency_n:STAT_W_o.scan_a[o][t],capacity_n:STAT_W_o.capacity_n})},async get_img__v(_){try{const a=await STAT_W_o.bitmap__o(_);if(a){const t=await _.canvas_e.getContext("2d");t.drawImage(a,0,0),STAT_W_o.imgLayer_a.push({canvas_e:_.canvas_e,context_o:t})}}catch(_){console.log(`ERROR DETECTED @get_img__v(): ${_}`)}},put_canvas__v(_){STAT_W_o.pixel_n=_.pixel_n;const{stat_s:a,part_s:t}=_;STAT_W_o.stat_o[`${a}_o`]||(STAT_W_o.stat_o[`${a}_o`]={}),STAT_W_o.stat_o[`${a}_o`][`${t}_o`]={},STAT_W_o.stat_o[`${a}_o`][`${t}_o`].canvas_o=_.canvas_e;const o=_.canvas_e.getContext("2d");STAT_W_o.pixel_n=_.pixel_n,STAT_W_o.stat_o[`${a}_o`][`${t}_o`].context_o=o,STAT_W_o.stat_o[`${a}_o`][`${t}_o`].painter_c=new Painter(o)},put_draw__v(_){const{stat_s:a,part_s:t}=_;switch(a){case"burst":if(0===STAT_W_o.scan_a[STAT_W_o.SCAN_hue_freq_n][_.hue_n])return STAT_W_o.stat_o[`${a}_o`].sat_o.burst_c.clear__v(),void STAT_W_o.stat_o[`${a}_o`].lum_o.burst_c.clear__v();let o;switch(t){case"hue":o=360;break;case"sat":case"lum":o=101}const s=[];let e=0;for(let a of STAT_W_o.scan_a[STAT_W_o[`SCAN_${t}_freq_n`]]){let o,n,T;switch(t){case"hue":o=e,n=100,T=50;break;case"sat":o=_.hue_n,n=e,T=50;break;case"lum":o=_.hue_n,n=0,T=e}s[e]=a?{frequency_n:a,hsl_a:[o,n,T]}:null,++e}const n={color_a:s,range_n:o,canvas_o:STAT_W_o.stat_o[`${a}_o`][`${t}_o`].canvas_o,median_n:.5*STAT_W_o.stat_o[`${a}_o`][`${t}_o`].canvas_o.width,maxfreq_n:STAT_W_o.scan_a[STAT_W_o[`SCAN_${t}_rank_n`]][0][0]};STAT_W_o.stat_o[`${a}_o`][`${t}_o`].burst_c=new ColorBurst(n);break;case"aster":default:break;case"paint":const T=STAT_W_o.stat_o[`${a}_o`][`${t}_o`].painter_c;let[r,c]=t.split("_");switch(r){case"hue":for(let _=0;_<360;++_)T.fill__c([_,100,50]).rect__c(0,2*_,100,2,"fill");break;case"sat":for(let a=0;a<101;++a)T.fill__c([_.hue_n,a,50]).rect__c(0,2*a,100,2,"fill");break;case"lum":for(let _=0;_<101;++_)T.fill__c([0,0,_]).rect__c(0,2*_,100,2,"fill")}}},put_hsl__v(_){let{stat_s:a,layer_n:t,hsl_s:o,rangeX_n:s,atX_n:e,rangeY_n:n,atY_n:T}=_;console.log("layer_n: "+t);const r=e/s;let c=~~r;r>1&&++c,c*=s,c>100&&(c=100);let A=~~(2.559*c),S=.01*c+.001;T*=2,n*=2,STAT_W_o.stat_o[`${a}_o`][`${o}_front_o`].painter_c.fill__c([190,28,17,1]).rect__c(c,T,100-c,n,"fill").rect__c(0,T,c,n,"clear").fill__c([0,0,100,1-S]).rect__c(0,T,c,n,"fill");const l=_.atY_n;let W=l+_.rangeY_n;const i="hue"===o?359:100;W>i&&(W=i);const u=STAT_W_o.scan_a[STAT_W_o[`SCAN_${o}_n`]];console.log(u);const h=STAT_W_o.imgLayer_a[t].context_o,f=h.getImageData(0,0,STAT_W_o.imgLayer_a[t].canvas_e.width,STAT_W_o.imgLayer_a[t].canvas_e.height);console.log(f.data);for(let _=l;_<W;++_){const a=u[_];for(at_n=0;at_n<a.length;++at_n)f.data[a[at_n]+3]=A}console.log(f.data),h.putImageData(f,0,0)},put_scale__v(_){const{stat_s:a,part_s:t,scale_n:o}=_;STAT_W_o.stat_o[`${a}_o`][`${t}_o`].burst_c.clear__v(),//!!! before scaling
STAT_W_o.scale__n(a,t,o),STAT_W_o.stat_o[`${a}_o`][`${t}_o`].burst_c.draw__v()},message__v(_){const a=_.data;STAT_W_o.script__v(a.script_s);const t=a.task_s;if(STAT_W_o.message_o.includes(t)){const _=t.toLowerCase()+"__v";STAT_W_o[_](a)}},post__v(_){STAT_W_o.port_o.postMessage(_)},handleError__v(_){console.log`ERROR: ${_.message}`}};onconnect=_=>{STAT_W_o.port_o=_.ports[0],STAT_W_o.port_o.onmessage=STAT_W_o.message__v,STAT_W_o.port_o.onmessageerror=STAT_W_o.handleError__v};