
const RGB_H__n=(_,o,T)=>{const n=Math.min(_,o,T),a=Math.max(_,o,T);if(a===n)return 0;const s=a-n;return~~(60*(a===_?(o-T)/s+(o<T?6:0):a===o?(T-_)/s+2:(_-o)/s+4))},RGB_S__n=(_,o,T)=>{const n=Math.min(_,o,T),a=Math.max(_,o,T),s=a-n;if(!s)return 0;const t=n+a;return t>255?s/(510-a-n):s/t},RGB_L__n=(_,o,T)=>(Math.min(_,o,T)+Math.max(_,o,T))/510,STAT_W_o={port_o:null,pixel_n:1,status_o:{scan_b:!1},message_o:["GET_scan","GET_status","PUT_canvas","PUT_draw","PUT_scale"],scan_a:null,SCAN_HUE_n:0,SCAN_HUE_FREQ_n:1,SCAN_HUE_RANK_n:2,SCAN_SAT_n:3,SCAN_SAT_FREQ_n:4,SCAN_SAT_RANK_n:5,SCAN_LUM_n:6,SCAN_LUM_FREQ_n:7,SCAN_LUM_RANK_n:8,client_o:{},script_o:new Set,script__v(_){if(_){let o=[];for(let T of _.split(" "))STAT_W_o.script_o.has(T)||(STAT_W_o.script_o.add(T),o.push(`${T}.min.js`));o.length&&self.importScripts(...o)}},sleep__v:_=>new Promise((o=>setTimeout(o,_))),async waitScan__v(_){let o=100;for(;!STAT_W_o.status_o.scan_b;){if(!(--o>0))return STAT_W_o.post__v({task_s:"PUT_error",client_s:_,error_s:"scan is not available"}),!1;await STAT_W_o.sleep__v(50)}return!0},scale__n(_,o,T){const n=.5*STAT_W_o.client_o[`${_}_o`][`${o}_o`].canvas_o.width*(1-T);STAT_W_o.client_o[`${_}_o`][`${o}_o`].context_o.setTransform(T,0,0,T,n,n)},async get_scan__v(_){if(!STAT_W_o.scan_a){console.time("scan");
//!!!!!!!!!!!!!!!!!!!!!!!!!!
const o=`/assets/media/img/${_.work_s}/full/max/0/color.jpeg`,T=await fetch(o),n=await T.blob(),a=await createImageBitmap(n),s=new OffscreenCanvas(a.width,a.height).getContext("2d");s.drawImage(a,0,0);const t=s.getImageData(0,0,a.width,a.height);STAT_W_o.scan_a=new Array(1+STAT_W_o.SCAN_LUM_RANK_n);let A,e,S,c=360;for(STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_n]=new Array(c),STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_FREQ_n]=new Array(c);--c>=0;)STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_n][c]=[],STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_FREQ_n][c]=0;for(c=101,STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_n]=new Array(c),STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_FREQ_n]=new Array(c);--c>=0;)STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_n][c]=[],STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_FREQ_n][c]=0;for(c=101,STAT_W_o.scan_a[STAT_W_o.SCAN_LUM_n]=new Array(c),STAT_W_o.scan_a[STAT_W_o.SCAN_LUM_FREQ_n]=new Array(c);--c>=0;)STAT_W_o.scan_a[STAT_W_o.SCAN_LUM_n][c]=[],STAT_W_o.scan_a[STAT_W_o.SCAN_LUM_FREQ_n][c]=0;for(let _=0;_<t.data.length;_+=4){A=t.data[_],e=t.data[_+1],S=t.data[_+2];let o=RGB_H__n(A,e,S);STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_n][o].push(_),STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_FREQ_n][o]+=1;let T=~~(100*RGB_S__n(A,e,S));STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_n][T].push(_),STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_FREQ_n][T]+=1;let n=~~(100*RGB_L__n(A,e,S));STAT_W_o.scan_a[STAT_W_o.SCAN_LUM_n][n].push(_),STAT_W_o.scan_a[STAT_W_o.SCAN_LUM_FREQ_n][n]+=1}const r=_=>{const o=_.length;let T=new Array(o);for(let n=0;n<o;++n)T[n]=[_[n],n];return T.sort(((_,o)=>o[0]-_[0])),T};STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_RANK_n]=r(STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_FREQ_n]),STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_RANK_n]=r(STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_FREQ_n]),STAT_W_o.scan_a[STAT_W_o.SCAN_LUM_RANK_n]=r(STAT_W_o.scan_a[STAT_W_o.SCAN_LUM_FREQ_n]),console.timeEnd("scan")}},get_status__v(){STAT_W_o.post__v({task_s:"PUT_status",status_o:STAT_W_o.status_o},[STAT_W_o.status_o])},put_canvas__v(_){const{client_s:o,id_s:T}=_;STAT_W_o.client_o[`${o}_o`]||(STAT_W_o.client_o[`${o}_o`]={}),STAT_W_o.client_o[`${o}_o`][`${T}_o`]={},STAT_W_o.client_o[`${o}_o`][`${T}_o`].canvas_o=_.canvas_e;const n=_.canvas_e.getContext("2d");STAT_W_o.pixel_n=_.pixel_n,STAT_W_o.client_o[`${o}_o`][`${T}_o`].context_o=n},put_draw__v(_){console.log(_),STAT_W_o[`put_draw_${_.client_s}_${_.id_s}__v`](_)},put_draw_burst_hue__v(_){const o=[];let T=0;for(let _ of STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_FREQ_n])o[T]=_?{frequency_n:_,hsl_a:[T,100,50]}:null,++T;const{client_s:n,id_s:a}=_,s={color_a:o,range_n:360,canvas_o:STAT_W_o.client_o[`${n}_o`].hue_o.canvas_o,median_n:.5*STAT_W_o.client_o[`${n}_o`].hue_o.canvas_o.width,maxfreq_n:STAT_W_o.scan_a[STAT_W_o.SCAN_HUE_RANK_n][0][0]};STAT_W_o.client_o[`${n}_o`][`${a}_o`].burst_c=new ColorBurst(s)},put_scale__v(_){STAT_W_o[`put_scale_${_.client_s}_${_.id_s}__v`](_)},put_scale_burst_hue__v(_){const{client_s:o,id_s:T,scale_n:n}=_;STAT_W_o.client_o[`${o}_o`][`${T}_o`].burst_c.clear__v(),//!!! before scaling
STAT_W_o.scale__n(o,T,n),STAT_W_o.client_o[`${o}_o`][`${T}_o`].burst_c.draw__v()},put_draw_burst_sat__v(_){const o=_.hue_n,T=[];let n=0;for(let _ of STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_FREQ_n])T[n]=_?{frequency_n:_,hsl_a:[o,n,50]}:null,++n;const{client_s:a,id_s:s}=_,t={color_a:T,range_n:101,canvas_o:STAT_W_o.client_o[`${a}_o`].sat_o.canvas_o,median_n:.5*STAT_W_o.client_o[`${a}_o`].sat_o.canvas_o.width,maxfreq_n:STAT_W_o.scan_a[STAT_W_o.SCAN_SAT_RANK_n][0][0]};STAT_W_o.client_o[`${a}_o`][`${s}_o`].burst_c=new ColorBurst(t)},message__v(_){const o=_.data;STAT_W_o.script__v(o.script_s);const T=o.task_s;if(STAT_W_o.message_o.includes(T)){const _=T.toLowerCase()+"__v";STAT_W_o[_](o)}},post__v(_){STAT_W_o.port_o.postMessage(_)},handleError__v:_=>console.log`ERROR: ${_.message}`};onconnect=_=>{STAT_W_o.port_o=_.ports[0],STAT_W_o.port_o.onmessage=STAT_W_o.message__v,STAT_W_o.port_o.onmessageerror=STAT_W_o.handleError__v};