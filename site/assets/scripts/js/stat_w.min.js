
const STAT_W_o={port_o:null,status_o:{scan_b:!1},message_o:["GET_scan","GET_status","PUT_canvas","PUT_draw_test"],scan_a:null,client_o:{},script_o:new Set,sleep__v:_=>new Promise((t=>setTimeout(t,_))),async waitScan__v(_){let t=100;for(;!STAT_W_o.status_o.scan_b;){if(!(--t>0))return STAT_W_o.post__v({client_s:_,task_s:"PUT_error",error_s:"scan is not available"}),!1;await STAT_W_o.sleep__v(50)}return!0},read__v(_,t,o="text"){fetch(_).then((_=>{if(_.ok)return _[o]();throw new Error(`${_.status}: ${_.statusText}`)})).then((_=>{t(_)})).catch((_=>console.error(_)))},get_scan__v(_){STAT_W_o.scan_a||(console.time("scan"),
//!!!!!!!!!!!!!!!!!!!!!!!!!!
STAT_W_o.read__v(`/assets/media/img/${_.work_s}/full/max/0/scan.json`,(_=>{STAT_W_o.scan_a=new Function(`return ${_}`)(),STAT_W_o.scan_a&&(STAT_W_o.status_o.scan_b=!0),console.timeEnd("scan")}
//!!!!!!!!!!!!!!!!!!!!!!!!!!
)))},get_status__v(){STAT_W_o.post__v({task_s:"PUT_status",status_o:STAT_W_o.status_o},[STAT_W_o.status_o])},put_canvas__v(_){const t=_.client_s;STAT_W_o.client_o[t]||(STAT_W_o.client_o[t]={}),STAT_W_o.client_o[t].offCanvas_e=_.offCanvas_e;const o=_.pixel_n,s=_.offCanvas_e.getContext("2d");s.setTransform(o,0,0,o,0,0),STAT_W_o.client_o[t].context_o=s},async put_draw_test__v(_){const t=_.client_s;if(await STAT_W_o.waitScan__v(t)){const _=STAT_W_o.client_o[t],o={context_o:_.context_o};_.painter_c=new Painter(o),_.painter_c.fill__c([0,60,50]).rect__c(100,100,200,100,"fill").stroke__c([60,20,80]).thick__c(10).line__c(500,100,700,200).fill__c([120,60,50]).circle__c(200,300,100).stroke__c([180,50,50],6).arc__c(300,500,100,1.5*Math.PI,.2*Math.PI).fill__c([240,60,50]).pieSlice__c(500,300,80,2*Math.PI,.5*Math.PI,!0)}},script__v(_){if(_){let t=[];for(let o of _.split(" "))STAT_W_o.script_o.has(o)||(STAT_W_o.script_o.add(o),t.push(`${o}.min.js`));t.length&&self.importScripts(...t)}},message__v(_){const t=_.data;STAT_W_o.script__v(t.script_s);const o=t.task_s;if(STAT_W_o.message_o.includes(o)){const _=o.toLowerCase()+"__v";STAT_W_o[_](t)}},post__v(_){STAT_W_o.port_o.postMessage(_)},handleError__v:_=>console.log`ERROR: ${_.message}`};onconnect=_=>{STAT_W_o.port_o=_.ports[0],STAT_W_o.port_o.onmessage=STAT_W_o.message__v,STAT_W_o.port_o.onmessageerror=STAT_W_o.handleError__v};