
const STAT_W_o={port_o:null,status_o:{scan_b:!1},message_o:["GET_scan","GET_status","PUT_canvas"],scan_a:null,client_o:{},script_o:new Set,sleep__v:_=>new Promise((s=>setTimeout(s,_))),read__v(_,s,o="text"){fetch(_).then((_=>{if(_.ok)return _[o]();throw new Error(`${_.status}: ${_.statusText}`)})).then((_=>{s(_)})).catch((_=>console.error(_)))},async waitScan__v(_){let s=100;for(;!STAT_W_o.status_o.scan_b;){if(!(--s>0))return STAT_W_o.post__v({client_s:_,task_s:"PUT_error",error_s:"scan is not available"}),!1;await STAT_W_o.sleep__v(50)}return!0},get_scan__v(_){STAT_W_o.scan_a||(console.time("scan"),
//!!!!!!!!!!!!!!!!!!!!!!!!!!
STAT_W_o.read__v(`/assets/media/img/${_.work_s}/full/max/0/scan.json`,(_=>{STAT_W_o.scan_a=new Function(`return ${_}`)(),STAT_W_o.scan_a&&(STAT_W_o.status_o.scan_b=!0),console.timeEnd("scan")}
//!!!!!!!!!!!!!!!!!!!!!!!!!!
)))},get_status__v(){STAT_W_o.post__v({task_s:"PUT_status",status_o:STAT_W_o.status_o},[STAT_W_o.status_o])},put_canvas__v(_){const s=_.client_s;STAT_W_o.client_o[s]||(STAT_W_o.client_o[s]={}),STAT_W_o.client_o[s].canvas_e=_.canvas_e;const o=_.pixel_n,t=_.canvas_e.getContext("2d");t.setTransform(o,0,0,o,0,0),STAT_W_o.client_o[s].context_o=t},script__v(_){if(_){let s=[];for(let o of _.split(" "))STAT_W_o.script_o.has(o)||(STAT_W_o.script_o.add(o),s.push(`${o}.min.js`));s.length&&self.importScripts(...s)}},message__v(_){const s=_.data;STAT_W_o.script__v(s.script_s);const o=s.task_s;if(STAT_W_o.message_o.includes(o)){const _=o.toLowerCase()+"__v";STAT_W_o[_](s)}},post__v(_){STAT_W_o.port_o.postMessage(_)},handleError__v:_=>console.log`ERROR: ${_.message}`};onconnect=_=>{STAT_W_o.port_o=_.ports[0],STAT_W_o.port_o.onmessage=STAT_W_o.message__v,STAT_W_o.port_o.onmessageerror=STAT_W_o.handleError__v};