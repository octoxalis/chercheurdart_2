
const RGB_H__n=(_,o,a)=>{const s=Math.min(_,o,a),t=Math.max(_,o,a);if(t===s)return 0;const n=t-s;return~~(60*(t===_?(o-a)/n+(o<a?6:0):t===o?(a-_)/n+2:(_-o)/n+4))},RGB_S__n=(_,o,a)=>{const s=Math.min(_,o,a),t=Math.max(_,o,a),n=t-s;if(!n)return 0;const e=s+t;return e>255?n/(510-t-s):n/e},RGB_L__n=(_,o,a)=>(Math.min(_,o,a)+Math.max(_,o,a))/510,STAT_W_o={port_o:null,pixel_n:1,status_o:{scan_b:!1},message_o:["GET_scan","GET_status","PUT_canvas","PUT_draw","PUT_scale"],scan_a:null,client_o:{},script_o:new Set,script__v(_){if(_){let o=[];for(let a of _.split(" "))STAT_W_o.script_o.has(a)||(STAT_W_o.script_o.add(a),o.push(`${a}.min.js`));o.length&&self.importScripts(...o)}},sleep__v:_=>new Promise((o=>setTimeout(o,_))),async waitScan__v(_){let o=100;for(;!STAT_W_o.status_o.scan_b;){if(!(--o>0))return STAT_W_o.post__v({client_s:_,task_s:"PUT_error",error_s:"scan is not available"}),!1;await STAT_W_o.sleep__v(50)}return!0},scale__n(_,o,a){const s=.5*STAT_W_o.client_o[`${_}_o`][`${o}_o`].canvas_o.width*(1-a);STAT_W_o.client_o[`${_}_o`][`${o}_o`].context_o.setTransform(a,0,0,a,s,s)},async get_scan__v(_){if(!STAT_W_o.scan_a){console.time("scan");
//!!!!!!!!!!!!!!!!!!!!!!!!!!
const o=`/assets/media/img/${_.work_s}/full/max/0/color.jpeg`,a=await fetch(o),s=await a.blob(),t=await createImageBitmap(s),n=new OffscreenCanvas(t.width,t.height).getContext("2d");n.drawImage(t,0,0);const e=n.getImageData(0,0,t.width,t.height);STAT_W_o.scan_a=new Array(9);let T,c,r,l=360;for(STAT_W_o.scan_a[0]=new Array(l),STAT_W_o.scan_a[1]=new Array(l);--l>=0;)STAT_W_o.scan_a[0][l]=[],STAT_W_o.scan_a[1][l]=0;for(l=101,STAT_W_o.scan_a[3]=new Array(l),STAT_W_o.scan_a[4]=new Array(l);--l>=0;)STAT_W_o.scan_a[3][l]=[],STAT_W_o.scan_a[4][l]=0;for(l=101,STAT_W_o.scan_a[6]=new Array(l),STAT_W_o.scan_a[7]=new Array(l);--l>=0;)STAT_W_o.scan_a[6][l]=[],STAT_W_o.scan_a[7][l]=0;for(let _=0;_<e.data.length;_+=4){T=e.data[_],c=e.data[_+1],r=e.data[_+2];let o=RGB_H__n(T,c,r);STAT_W_o.scan_a[0][o].push(_),STAT_W_o.scan_a[1][o]+=1;let a=~~(100*RGB_S__n(T,c,r));STAT_W_o.scan_a[3][a].push(_),STAT_W_o.scan_a[4][a]+=1;let s=~~(100*RGB_L__n(T,c,r));STAT_W_o.scan_a[6][s].push(_),STAT_W_o.scan_a[7][s]+=1}const A=_=>{const o=_.length;let a=new Array(o);for(let s=0;s<o;++s)a[s]=[_[s],s];return a.sort(((_,o)=>o[0]-_[0])),a};STAT_W_o.scan_a[2]=A(STAT_W_o.scan_a[1]),STAT_W_o.scan_a[5]=A(STAT_W_o.scan_a[4]),STAT_W_o.scan_a[8]=A(STAT_W_o.scan_a[7]),console.timeEnd("scan")}},get_status__v(){STAT_W_o.post__v({task_s:"PUT_status",status_o:STAT_W_o.status_o},[STAT_W_o.status_o])},put_canvas__v(_){const{client_s:o,id_s:a}=_;STAT_W_o.client_o[`${o}_o`]||(STAT_W_o.client_o[`${o}_o`]={}),STAT_W_o.client_o[`${o}_o`][`${a}_o`]={},STAT_W_o.client_o[`${o}_o`][`${a}_o`].canvas_o=_.canvas_e;const s=_.canvas_e.getContext("2d");STAT_W_o.pixel_n=_.pixel_n,STAT_W_o.client_o[`${o}_o`][`${a}_o`].context_o=s},put_draw__v(_){STAT_W_o[`put_draw_${_.client_s}__v`](_)},put_draw_burst__v(_){const o=[];let a=0;for(let _ of STAT_W_o.scan_a[1])o[a]=_?{frequency_n:_,hsl_a:[a,100,50]}:null,++a;const{client_s:s,id_s:t}=_,n={color_a:o,range_n:360,canvas_o:STAT_W_o.client_o[`${s}_o`].hue_o.canvas_o,median_n:.5*STAT_W_o.client_o[`${s}_o`].hue_o.canvas_o.width,maxfreq_n:STAT_W_o.scan_a[2][0][0]};console.log(_),STAT_W_o.client_o[`${s}_o`][`${t}_o`].burst_c=new ColorBurst(n)},put_scale__v(_){STAT_W_o[`put_scale_${_.client_s}__v`](_)},put_scale_burst__v(_){const{client_s:o,id_s:a,scale_n:s}=_;STAT_W_o.client_o[`${o}_o`][`${a}_o`].burst_c.clear__v(),//!!! before scaling
STAT_W_o.scale__n(o,a,s),STAT_W_o.client_o[`${o}_o`][`${a}_o`].burst_c.draw__v()},message__v(_){const o=_.data;STAT_W_o.script__v(o.script_s);const a=o.task_s;if(STAT_W_o.message_o.includes(a)){const _=a.toLowerCase()+"__v";STAT_W_o[_](o)}},post__v(_){STAT_W_o.port_o.postMessage(_)},handleError__v:_=>console.log`ERROR: ${_.message}`};onconnect=_=>{STAT_W_o.port_o=_.ports[0],STAT_W_o.port_o.onmessage=STAT_W_o.message__v,STAT_W_o.port_o.onmessageerror=STAT_W_o.handleError__v};