
const READ_o={read__v:(e,o,r="text")=>{fetch(e).then((e=>{if(e.ok)return e[r]();throw new Error(`${e.status}: ${e.statusText}`)})).then((e=>{o(e)})).catch((e=>console.error(e)))}},STAT_o={worker_s:"/assets/scripts/js/stat_worker.min.js",worker_o:null,loadScan__v:e=>{const o=e.scan_a,r=new Function(`return ${o}`)();console.log(r)},listenWorker__v:e=>{const o=e.data;switch(o.task_s){case"LOAD_SCAN":STAT_o.loadScan__v(o)}},startWorker__v:()=>{const e=document.getElementById("stat").dataset.work_s;STAT_o.worker_o=new Worker(STAT_o.worker_s),STAT_o.worker_o.addEventListener("message",STAT_o.listenWorker__v,!0),STAT_o.worker_o.addEventListener("error",STAT_o.handleError__v,!0),STAT_o.worker_o.postMessage({task_s:"LOAD_SCAN",id_s:e})},handleError__v:e=>console.log`ERROR: ${e.message}`,listener__v:()=>{for(let e of["LA_stat"]){const o=document.getElementById(e);o&&o.addEventListener("click",STAT_o[`${e}__v`],{once:!0})}}};STAT_o.listener__v(),STAT_o.startWorker__v();