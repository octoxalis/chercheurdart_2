
class WorkerClient{constructor(s){this.url_s=s.url_s,this.client_s=s.client_s,this.handleMessage__v=s.handleMessage__v,this.port_o=null,this.init__v()}init__v(){const s=new SharedWorker(this.url_s);this.port_o=s.port,this.port_o.onerror=this.error__v,this.port_o.onmessage=s=>this.message__v(s.data)}error__v(s){console.log`ERROR: ${s.message}`}message__v(s){s.client_s&&s.client_s!==this.client_s||this.handleMessage__v(s)}post__v(s){this.port_o.postMessage(s)}}const STAT_o={worker_o:null,elementDim__n:(s,e="width")=>+window.getComputedStyle(document.querySelector(s))[e].slice(0,-2),canvas__e(s,e){const t=document.querySelector(`#canvas_${s}_${e}`);let _=2048*window.devicePixelRatio;return t.width=_,t.height=_,t},message__v(s){s.task_s},worker__o(s,e,t){const _=new WorkerClient({url_s:"/assets/scripts/js/stat_w.min.js",client_s:s,handleMessage__v:t});switch(s){case"burst":for(let t of["hue","sat","lum"]){const o=STAT_o.canvas__e(s,t).transferControlToOffscreen();_.port_o.postMessage({client_s:s,id_s:t,script_s:e,task_s:"PUT_canvas",pixel_n:window.devicePixelRatio,canvas_e:o},[o])}}return _},adopt__v(s){document.getElementById(`IF_${s}`)&&IND_o.adopt__v(s,//!!! section id=stat_s
`IF_${s}`,((e,t)=>{const _=t.querySelector(`#script_${s}`);_&&(_.src=_.dataset.src)}))},listener__v(){for(let s of["burst","aster","paint"]){const e=document.getElementById(`LA_${s}`);e&&e.addEventListener("click",(()=>STAT_o.adopt__v(s)),{once:!0})}},init__v(s){STAT_o.worker_o=new WorkerClient({url_s:"/assets/scripts/js/stat_w.min.js",client_s:"stat",handleMessage__v:STAT_o.message__v}),STAT_o.worker_o.post__v({client_s:"stat",task_s:"GET_scan",work_s:s})}};STAT_o.listener__v();