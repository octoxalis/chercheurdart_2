
const READ_o={read__v:(e,_,o="text")=>{fetch(e).then((e=>{if(e.ok)return e[o]();throw new Error(`${e.status}: ${e.statusText}`)})).then((e=>{_(e)})).catch((e=>console.error(e)))}},STAT_o={worker_s:"/assets/scripts/js/stat_worker.min.js",worker_o:null,scan_a:null,adopt__v:e=>{document.getElementById(`IF_${e}`)&&IND_o.adopt__v(e,//!!! section id=stat_s
`IF_${e}`,((_,o)=>{const r=o.querySelector(`#${e}_script`);r&&(r.src=r.dataset.src)}))},listener__v:()=>{for(let e of["burst","aster","paint"]){const _=document.getElementById(`LA_${e}`);_&&_.addEventListener("click",(()=>STAT_o.adopt__v(e)),{once:!0})}},receive__v:e=>{const _=e.data;switch(_.task_s){case"PUT_scan":STAT_o.put_scan__v(_.scan_a)}},put_scan__v:e=>{STAT_o.scan_a=e,console.timeEnd("scan_load");
//!!!!!!!!!!!!!!!!!!!!!!!!!!
}
//!!!!!!!!!!!!!!!!!!!!!!!!!!
,handleError__v:e=>console.log`ERROR: ${e.message}`,init__v:e=>{console.time("scan_load"),
//!!!!!!!!!!!!!!!!!!!!!!!!!!
STAT_o.worker_o||(STAT_o.worker_o=new Worker(STAT_o.worker_s),STAT_o.worker_o.addEventListener("message",STAT_o.receive__v,!0),STAT_o.worker_o.addEventListener("error",STAT_o.handleError__v,!0),STAT_o.worker_o.postMessage({task_s:"GET_scan",work_s:e}))}};STAT_o.listener__v();