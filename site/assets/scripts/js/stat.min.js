
class WorkerClient{constructor(e){this.url_s=e.url_s,this.client_s=e.client_s,this.handleMessage__v=e.handleMessage__v,this.port_o=null,this.init__v()}init__v(){const e=new SharedWorker(this.url_s);this.port_o=e.port,this.port_o.onerror=this.error__v,this.port_o.onmessage=e=>this.message__v(e.data)}error__v(e){console.log`ERROR: ${e.message}`}message__v(e){e.client_s&&e.client_s!==this.client_s||this.handleMessage__v(e)}post__v(e){this.port_o.postMessage(e)}}const READ_o={read__v:(e,t,s="text")=>{fetch(e).then((e=>{if(e.ok)return e[s]();throw new Error(`${e.status}: ${e.statusText}`)})).then((e=>{t(e)})).catch((e=>console.error(e)))}},STAT_o={worker_o:null,message__v://!!! 2. from stat_w.js
e=>{e.task_s},canvas__e://!!! 4. from section
e=>{const t=window.getComputedStyle(document.querySelector("nav")).height.slice(0,-2),s=document.querySelector(`#${e}`),{width:_,height:o}=s.getBoundingClientRect(),r=document.createElement("canvas");r.id=`${e}_canvas`;const n=window.devicePixelRatio;r.width=_*n,r.height=(o-+t)*n;const i=s.querySelector(`#DI_${e}`);return i.insertBefore(r,i.querySelector("script")),r},worker__o://!!! 4. from section
(e,t,s)=>{const _=new WorkerClient({url_s:"/assets/scripts/js/stat_w.min.js",client_s:e,handleMessage__v:t}),o=STAT_o.canvas__e(e).transferControlToOffscreen();return _.port_o.postMessage({client_s:e,script_s:s,task_s:"PUT_canvas",pixel_n:window.devicePixelRatio,canvas_e:o},[o]),_},adopt__v://!!! 3. from listener__v
e=>{document.getElementById(`IF_${e}`)&&IND_o.adopt__v(e,//!!! section id=stat_s
`IF_${e}`,((t,s)=>{const _=s.querySelector(`#${e}_script`);_&&(_.src=_.dataset.src)}))},scanner__v:()=>{const e=document.querySelector('img[src$="/full/max/0/color.avif"]');console.log(e)},listener__v:()=>{for(let e of["burst","aster","paint"]){const t=document.getElementById(`LA_${e}`);t&&t.addEventListener("click",(()=>STAT_o.adopt__v(e)),{once:!0})}},init__v://!!! 1. from index.js
e=>{STAT_o.worker_o=new WorkerClient({url_s:"/assets/scripts/js/stat_w.min.js",client_s:"stat",handleMessage__v:STAT_o.message__v}),STAT_o.worker_o.post__v({client_s:"stat",task_s:"GET_scan",work_s:e})}};STAT_o.listener__v();