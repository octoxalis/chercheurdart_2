
//=== paint_worker.js
const PAI_W_o =
{
  offCanvas_o: null,

  context_o:   null,



  receive__v:
  (
    msg_o
  ) =>
  {
    const payload_o =
      msg_o
        .data

    switch
    (
      payload_o
        .task_s
    )
    {
      case 'PUT_offscreen':      //: { task_s, id_s }

        break
    
      default:
        break
    }
  }
  ,



  worker__o
  (
    stat_s,
    script_s,
    message__v
  )
  {
    const worker_o =
      new WorkerClient
      (
        {
          url_s: '',
          stat_s: stat_s,
          handleMessage__v: message__v
        }
      )

    switch
    (
      stat_s
    )
    {
      case 'burst':
        STAT_o
          .putCanvas__v
          (
            stat_s,
            script_s,
            worker_o,
            [
              'hue',
              'sat',
              'lum'
            ]
          )
            
        break;
    
      case 'aster':
        STAT_o
          .putCanvas__v
          (
            stat_s,
            script_s,
            worker_o,
            [
              'initial',
              'processed'
            ]
          )
        break

      default:
        break;
    }

    return worker_o
  }
  ,



}




//=== INIT
self
  .addEventListener
  (
    'message',
    PAI_W_o
      .receive__v,
    true
  )


  
  ;console.log( 'paint_worker.js' )
  