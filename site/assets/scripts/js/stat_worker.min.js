
const STAT_W_o={port_o:null,scan_a:null,client_o:{},read__v:(_,o,e="text")=>{fetch(_).then((_=>{if(_.ok)return _[e]();throw new Error(`${_.status}: ${_.statusText}`)})).then((_=>{o(_)})).catch((_=>console.error(_)))},put_offscreen:_=>{const o=_.client_s;STAT_W_o.client_o[o].canvas_e=_.canvas_e,STAT_W_o.client_o[o].context_o=_.canvas_e.getContext("2d")},get_scan__v:_=>{STAT_W_o.read__v(`/assets/media/img/${_.work_s}/full/max/0/scan.json`,(_=>{STAT_W_o.scan_a=new Function(`return ${_}`)(),console.log(STAT_W_o.scan_a),STAT_W_o.port_o.postMessage({client_s:"stat",task_s:"PUT_scan",msg_s:"0"})}))},handleError__v:_=>console.log`ERROR: ${_.message}`,receive__v:_=>{const o=_.data;switch(o.task_s){case"GET_scan":STAT_W_o.get_scan__v(o);break;case"PUT_offscreen":STAT_W_o.put_offscreen(o)}}};onconnect=_=>{STAT_W_o.port_o=_.ports[0],STAT_W_o.port_o.onmessage=STAT_W_o.receive__v,STAT_W_o.port_o.onmessageerror=STAT_W_o.handleError__v,STAT_W_o.port_o.start()};