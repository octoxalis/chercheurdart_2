
class Idb{constructor(e="kv_db",t="kv_store",r=1){this.idb_o=null,this.ready_o=null,this.idb_s=e,this.store_s=t,this.version_n=r,this.init__v()}init__v(){this.ready_o=new Promise(((e,t)=>{const r=indexedDB.open(this.idb_s,this.version_n);r.onupgradeneeded=e=>{this.idb_o=e.target.result,this.idb_o.createObjectStore(this.store_s)},r.onsuccess=t=>{this.idb_o=t.target.result,e(t.target.result)},r.onerror=e=>t(e.target.error)}))}store__o(e="readonly"){return this.idb_o.transaction([this.store_s],e).objectStore(this.store_s)}set__v(e,t){return this.ready_o.then((()=>new Promise(((r,s)=>{const o=this.store__o("readwrite").put(t,e);o.onsuccess=r,o.onerror=s}))))}update__v(e,t,r){return this.ready_o.then((()=>new Promise(((s,o)=>{const n=this.store__o("readwrite"),_=n.get(e);_.onsuccess=()=>{const i=_.result;i[t]=r;const c=n.put(i,e);c.onsuccess=s,c.onerror=o},_.onerror=o}))))}walk__v(e){return this.ready_o.then((()=>new Promise(((t,r)=>{const s=this.store__o().openCursor();s.onsuccess=r=>{let s=r.target.result;s?(e(s.key,s.value),s.continue()):t()},s.onerror=r}))))}get__(e){return this.ready_o.then((()=>new Promise(((t,r)=>{const s=this.store__o().get(encodeURI(e));s.onsuccess=e=>t(e.target.result),s.onerror=r}))))}key__b(e){return this.ready_o.then((()=>new Promise(((t,r)=>{const s=this.store__o().count(encodeURI(e));s.onsuccess=e=>t(e.target.result),s.onerror=r}))))}last__(){return this.ready_o.then((()=>new Promise(((e,t)=>{const r=this.store__o("readwrite").openCursor(null,"prev");r.onsuccess=t=>{t.target.result&&e(t.target.result.value)},r.onerror=t}))))}deleteAll__v(e){return this.ready_o.then((()=>new Promise(((t,r)=>{const s=this.store__o("readwrite"),o=s.openCursor();o.onsuccess=t=>{let r,o=t.target.result;o&&(r=o.value,e(r)&&s.delete(o.key),o.continue())},o.onerror=r}))))}delete__v(e){return this.ready_o.then((()=>new Promise(((t,r)=>{const s=this.store__o("readwrite").delete(e);s.onsuccess=t,s.onerror=r}))))}clear__v(){return this.ready_o.then((()=>new Promise(((e,t)=>{const r=this.store__o("readwrite").clear();r.onsuccess=e,r.onerror=t}))))}deleteIDB__v(){indexedDB.deleteDatabase(this.idb_s)}}const IDB_o={idb_o:new Idb("chercheurdart_idb","chercheurdart_store")};